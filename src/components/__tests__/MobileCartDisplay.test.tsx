// Generated by CodiumAI
import { render, screen } from '@testing-library/react'
import sneakersFallLimitedThumbnail from '@/assets/products/image-product-1-thumbnail.jpg'
import MobileCartDisplay, {
  type MobileCartDisplayProps,
} from '../MobileCartDisplay'

type CartContents = MobileCartDisplayProps['cartContents']

describe('MobileCartDisplay', () => {
  // Renders cart header and content with product image, description, and price summary, remove from cart button, and checkout button when cartContents is provided
  it('should render cart header and content when cartContents is provided', () => {
    // Arrange
    const cartContents: CartContents = {
      productId: 'sneakersFallLimited',
      quantity: 2,
    }
    const clearCartMock = vi.fn()

    // Act
    render(
      <MobileCartDisplay
        cartContents={cartContents}
        clearCart={clearCartMock}
      />
    )

    // Assert
    expect(screen.getByRole('heading', { name: /cart/i })).toBeInTheDocument()
    expect(screen.getByText('$125.00 x 2')).toBeInTheDocument()
    expect(screen.getByText('$250.00')).toBeInTheDocument()
    expect(screen.getByLabelText('Remove item from cart')).toBeInTheDocument()
    expect(
      screen.getByRole('button', { name: /checkout/i })
    ).toBeInTheDocument()
  })

  // Handles missing or invalid cartContents prop
  it('should handle missing or invalid cartContents prop', () => {
    // Arrange
    const clearCartMock = vi.fn()
    const cartContents: CartContents = undefined

    // Act
    render(
      <MobileCartDisplay
        cartContents={cartContents}
        clearCart={clearCartMock}
      />
    )

    // Assert
    expect(screen.getByText('Your cart is empty.')).toBeInTheDocument()
  })

  // Displays correct product thumbnail
  it('should render correct product thumbnail when cartContents is provided', () => {
    // Arrange
    const clearCartMock = vi.fn()
    const cartContents: CartContents = {
      productId: 'sneakersFallLimited',
      quantity: 2,
    }

    // Act
    render(
      <MobileCartDisplay
        cartContents={cartContents}
        clearCart={clearCartMock}
      />
    )

    // Assert
    expect(
      screen
        .getByAltText(/Side view of Fall Limited Edition Sneakers/i)
        .getAttribute('src')
    ).toBe(sneakersFallLimitedThumbnail)
  })
})
